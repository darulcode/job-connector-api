stages:
  - build
  - test
  - deploy

variables:
  DOCKER_REGISTRY: "docker.io"
  DOCKER_IMAGE_NAME: "darulcode72/job-connector-api"
  POSTGRES_DB: "enigma_job_connector"
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "123"
  JWT_SECRET: "secret"
  JWT_EXPIRATION_IN_MINUTES: 5
  JWT_ISSUER: "Enigma"
  REFRESH_TOKEN_EXPIRATION_IN_HOUR: 24
  REDIS_HOST: "job-connector-redis"
  REDIS_PORT: 6379
  POSTGRES_HOST: "job-connector-postgres"
  DOCKER_IMAGE_TAG: "latest"

# Build stage
build:
  image: maven:3.9.4-eclipse-temurin-17
  stage: build
  tags:
    - docker
  script:
    - mvn clean install -DskipTests
    - docker build -t $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$CI_COMMIT_REF_NAME .
    - docker login -u darulcode72 -p 1Ad4Jm7Tw@# $DOCKER_REGISTRY
    - docker push $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$CI_COMMIT_REF_NAME

# Deploy stage
deploy:
  image: docker:24.0.5
  stage: deploy
  tags:
    - docker
  only:
    - master
  script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H 103.127.97.132 >> ~/.ssh/known_hosts
    - ssh Poseidon@103.127.97.132 "
      docker login -u darulcode72 -p 1Ad4Jm7Tw@# $DOCKER_REGISTRY &&
      docker pull $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$CI_COMMIT_REF_NAME &&
      docker stop job-connector-api || true &&
      docker rm job-connector-api || true &&
      docker run -d --name job-connector-api \
      -e POSTGRES_DB=$POSTGRES_DB \
      -e POSTGRES_USER=$POSTGRES_USER \
      -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
      -e JWT_SECRET=$JWT_SECRET \
      -e JWT_EXPIRATION_IN_MINUTES=$JWT_EXPIRATION_IN_MINUTES \
      -e JWT_ISSUER=$JWT_ISSUER \
      -e REFRESH_TOKEN_EXPIRATION_IN_HOUR=$REFRESH_TOKEN_EXPIRATION_IN_HOUR \
      -e REDIS_HOST=$REDIS_HOST \
      -e REDIS_PORT=$REDIS_PORT \
      -e POSTGRES_HOST=$POSTGRES_HOST \
      -p 8080:8080 \
      $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$CI_COMMIT_REF_NAME"
